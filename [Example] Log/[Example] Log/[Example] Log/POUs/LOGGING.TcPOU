<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="LOGGING" Id="{dd1fbfce-80da-40e0-844a-c9ae4087a814}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK LOGGING

VAR_INPUT
	sLogEvent		: STRING;
	sLogComp		: STRING;
	sLogAction		: STRING;
	sLogStatus		: STRING;
	blogFlag		: BOOL;
END_VAR
VAR_OUTPUT
	blog_complete 	: BOOL := FALSE;
	blog_error	 	: BOOL := FALSE;
END_VAR
VAR
	fb_TimeStamp : FB_UpdateTimeStamp ();
	fbCreateDir	 : FB_CreateDir;
	fbFileOpen	 : FB_FileOpen;
	fbFileWrite	 : FB_FilePuts;
	fbFileClose	 : FB_FileClose;
	ilog_state	 : ( INIT, 
					 CREATE_DIR, 
					 FILE_OPEN,
					 WRITE_TITLE,
					 WRITE_LOG, 
					 FILE_CLOSE,
					 CLEAR,
					 BUFFER, 
					 ERROR);
	
	sTextLog	 	: STRING[300];		
	sFolderName	 	: STRING;
	sLastFolderName	: STRING;
	sFileName		: STRING;
	sLastFileName 	: STRING;	
		
	sWritepLog	 : STRING[300];
	sWriteTitle	 : STRING;
	
	sInLogEvent	: STRING;
	sInLogComp	: STRING;
	sInLogAction	: STRING;
	sInLogStatus	: STRING;
	berror			: BOOL;
	
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[IF sLogComp<>sInLogComp OR sLogAction<>sInLogAction OR sLogStatus<>sInLogStatus THEN
	sInLogEvent		:= sLogEvent;
	sInLogComp		:= sLogComp;
	sInLogAction	:= sLogAction;
	sInLogStatus	:= sLogStatus;
ELSE
	RETURN;
END_IF

sTextLog := string_concat(sInLogEvent, sInLogComp,sInLogAction,sInLogStatus);

WHILE blogFlag DO
			// INIT -------------------------------------------------------------------
		INIT:
			blog_complete	:= FALSE;
			blog_error		:= FALSE;
			ilog_state 		:= CREATE_DIR;
			fbCreateDir(bExecute:= FALSE);
	
		// CREATE_DIR -------------------------------------------------------------			
		CREATE_DIR:	
			sFolderName := CONCAT(GVL.Log_Directory, MAIN.fb_TimeStamp.SystemDate);

			IF sFolderName = sLastFolderName THEN
				ilog_state := FILE_OPEN;
				fbCreateDir(bExecute := FALSE);
				fbFileOpen(bExecute := FALSE);
			ELSE
				fbCreateDir( sPathName:= sFolderName, bExecute:= TRUE );
				IF NOT fbCreateDir.bBusy THEN
					ilog_state := FILE_OPEN;
					fbCreateDir(bExecute := FALSE);
					fbFileOpen(bExecute := FALSE);
					sLastFolderName := sFolderName;
				END_IF
			END_IF
			
		// FILE_OPEN -------------------------------------------------------------
		FILE_OPEN:
			sFileName := CONCAT(sFolderName,'\');
			sFileName := CONCAT(sFileName, MAIN.fb_TimeStamp.SystemHour);
			sFileName := CONCAT(sFileName,'.csv');
				
			fbFileOpen( sPathName	:= sFileName, 
						nMode		:= FOPEN_MODEAPPEND, 
						bExecute	:= TRUE, 
						hFile=>);
			IF fbFileOpen.bError THEN
				ilog_state := ERROR;
				fbFileOpen(bExecute := FALSE);
				fbFileWrite(bExecute := FALSE);
			ELSIF NOT fbFileOpen.bBusy THEN
				ilog_state := WRITE_TITLE;
				fbFileOpen(bExecute := FALSE);
				fbFileWrite(bExecute := FALSE);
			END_IF
			
		// WRITE_TITLE -------------------------------------------------------------
		WRITE_TITLE:
			IF sLastFileName <> sFileName THEN	
				sWriteTitle := CONCAT('$n','Time Stamp');
				sWriteTitle := CONCAT(sWriteTitle,',');
				sWriteTitle := CONCAT(sWriteTitle,'Event');
				sWriteTitle := CONCAT(sWriteTitle,',');
				sWriteTitle := CONCAT(sWriteTitle,'Component');
				sWriteTitle := CONCAT(sWriteTitle,',');
				sWriteTitle := CONCAT(sWriteTitle,'Action');
				sWriteTitle := CONCAT(sWriteTitle,',');
				sWriteTitle := CONCAT(sWriteTitle,'Status');
				
				fbFileWrite ( hFile:=fbFileOpen.hFile,
								sLine:=sWriteTitle,
								bExecute:=TRUE);
				IF fbFileWrite.bError THEN
					ilog_state := ERROR;
					fbFileWrite(bExecute := FALSE);
					fbFileClose(bExecute := FALSE);
				ELSIF NOT fbFileWrite.bBusy THEN
					ilog_state := WRITE_LOG;
					fbFileWrite(bExecute := FALSE);
					fbFileClose(bExecute := FALSE);
					sLastFileName := sFileName;
				END_IF
			ELSE
				ilog_state := WRITE_LOG;
			END_IF

		// WRITE_LOG -------------------------------------------------------------
		WRITE_LOG:	
			sWritepLog := sTextLog;
			
			fbFileWrite ( 	hFile		:=fbFileOpen.hFile,
							sLine		:=sWritepLog,
							bExecute	:=TRUE);
			IF fbFileWrite.bError THEN
				ilog_state := ERROR;
				fbFileWrite(bExecute := FALSE);
				fbFileClose(bExecute := FALSE);
			ELSIF NOT fbFileWrite.bBusy THEN
				ilog_state := FILE_CLOSE;
				fbFileWrite(bExecute := FALSE);
				fbFileClose(bExecute := FALSE);
			END_IF
			
		// FILE_CLOSE -------------------------------------------------------------
		FILE_CLOSE:			
			fbFileClose( hFile		:=fbFileOpen.hFile,
						 bExecute	:=TRUE);
			IF fbFileClose.bError THEN
				ilog_state := ERROR;
				fbFileClose(bExecute := FALSE);
			ELSIF NOT fbFileClose.bBusy THEN
				ilog_state := CLEAR;
				fbFileClose(bExecute := FALSE);
			END_IF
			
		// CLEAR -------------------------------------------------------------	
		CLEAR:
			blog_complete	:= TRUE;
			blogFlag		:= FALSE;
			ilog_state 		:= INIT;
				
		// ERROR -------------------------------------------------------------	
		ERROR:
			blog_error		:= TRUE;
			blogFlag		:= FALSE;
			ilog_state 		:= INIT;
	END_CASE
END_WHILE]]></ST>
    </Implementation>
    <Method Name="string_concat" Id="{3e5915c3-d41d-4397-ae8e-5b3ff8478036}">
      <Declaration><![CDATA[METHOD string_concat : STRING(300)
VAR_INPUT
	text1	: STRING;
	text2	: STRING;
	text3	: STRING;
	text4	: STRING;
END_VAR
VAR
	Con_String : String(300);
END_VAR

]]></Declaration>
      <Implementation>
        <ST><![CDATA[Con_String := CONCAT('$n', MAIN.fb_TimeStamp.FullSystemTime);
Con_String := CONCAT(Con_String, ' , ');
Con_String := CONCAT(Con_String, text1);
Con_String := CONCAT(Con_String, ' , ');
Con_String := CONCAT(Con_String, text2);
Con_String := CONCAT(Con_String, ' , ');
Con_String := CONCAT(Con_String, text3);
Con_String := CONCAT(Con_String, ' , ');
Con_String := CONCAT(Con_String, text4);

string_concat := Con_String;]]></ST>
      </Implementation>
    </Method>
    <LineIds Name="LOGGING">
      <LineId Id="224" Count="11" />
      <LineId Id="534" Count="114" />
      <LineId Id="352" Count="0" />
      <LineId Id="9" Count="0" />
    </LineIds>
    <LineIds Name="LOGGING.string_concat">
      <LineId Id="15" Count="9" />
      <LineId Id="5" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>