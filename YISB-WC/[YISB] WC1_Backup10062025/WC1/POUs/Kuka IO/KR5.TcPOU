<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="KR5" Id="{a5b28d30-8ad6-4ccb-85ef-3780bb73423e}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM KR5
VAR_INPUT
	PLC_O_SYS 	AT %Q* : DWORD;
	PLC_O_PROG1 AT %Q* : DWORD;
	
	PLC_I_SYS 	AT %I* : DWORD;
	PLC_I_PROG1 AT %I* : DWORD;
	PLC_I_AXIS 	AT %I* : ARRAY[1..6] OF DWORD;
	PLC_I_CURR	AT %I* : ARRAY[1..6] OF DWORD;
	PLC_I_TEMP	AT %I* : ARRAY[1..6] OF DWORD;
	
	KR5_Estop		: BOOL;
	Idle			: BOOL;
	NoMotion		: BOOL;
	
	bOutBit : ARRAY [1..6,0..7] OF BOOL;
	bInBit  : ARRAY [1..6,0..7] OF BOOL;
	index		: USINT;
	index1		: USINT;
	
	dAxis		: ARRAY[1..6] OF DWORD;
	dCurr		: ARRAY[1..6] OF DWORD;
	dTemp		: ARRAY[1..6] OF DWORD;
END_VAR

VAR
	KROnline: BOOL;
	KR_ProgReady: BOOL;
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[	//If Soft EStop is pressed, turn off 1027 ~ 1034
	IF KR5_Estop THEN		
		bOutBit[1,0]:=bOutBit[1,1]:=bOutBit[1,2]:=bOutBit[1,3]:=
		bOutBit[1,4]:=bOutBit[1,5]:=bOutBit[1,6]:=bOutBit[1,7]:=FALSE;
	END_IF

	//Idle 	
	IF 	PLC_I_PROG1 = 1 THEN
			Idle := TRUE;
	ELSE
			Idle := FALSE;	
	END_IF
	
	//Online
	IF bInBit[1,0] OR bInBit[1,3] THEN
		KROnline := TRUE;
	ELSE
		KROnline := FALSE;
	END_IF

	//Program Ready
	IF bInBit[1,6] AND bInBit[2,4] THEN
		KR_ProgReady := TRUE;
	ELSIF GVL.KR1_bypass THEN
		KR_ProgReady := TRUE;
	ELSE
		KR_ProgReady := FALSE;
	END_IF
	
	
	// ======================================================================== System IO
	// Data In
	FOR index := 0 TO 31 BY 1 DO
		IF index < 8 THEN
			bInBit[1,index] := DWORD_TO_BOOL( SHR(PLC_I_SYS,index) AND 1);
		ELSIF index > 7 AND index < 16 THEN
			bInBit[2,index-8] := DWORD_TO_BOOL( SHR(PLC_I_SYS,index) AND 1);
		END_IF
	END_FOR
	
	// Data Out
	PLC_O_SYS.0 := bOutBit[1,0]; // 1027 move_enable
	PLC_O_SYS.1 := bOutBit[1,1]; // 1028 Drive_off
	PLC_O_SYS.2 := bOutBit[1,2]; // 1029 IO_Activate
	PLC_O_SYS.3 := bOutBit[1,3]; // 1030 Ext_Start
	PLC_O_SYS.4 := bOutBit[1,4]; // 1031 Conf_mess
	PLC_O_SYS.5 := bOutBit[1,5]; // 1032 
	PLC_O_SYS.6 := bOutBit[1,6]; // 1033 Drive_on
	PLC_O_SYS.7 := bOutBit[1,7]; // 1034 Pgno_Fbit
	PLC_O_SYS.8 := bOutBit[2,0]; // 1035 Pgno_Valid
	PLC_O_SYS.9 := bOutBit[2,1]; // 1036 Pgno_Parity

	// ===================================================================== Programme IO
	FOR index := 0 TO 31 BY 1 DO
		IF index < 8 THEN
			bInBit[3,index] := DWORD_TO_BOOL( SHR(PLC_I_PROG1,index) AND 1);
		ELSIF index > 7 AND index < 16 THEN
			bInBit[4,index-8] := DWORD_TO_BOOL( SHR(PLC_I_PROG1,index) AND 1);
		ELSIF index > 15 AND index < 24 THEN
			bInBit[5,index-16] := DWORD_TO_BOOL( SHR(PLC_I_PROG1,index) AND 1);
		ELSIF index > 23 THEN
			bInBit[6,index-24] := DWORD_TO_BOOL( SHR(PLC_I_PROG1,index) AND 1);
		END_IF
	END_FOR
	
	
	PLC_O_PROG1.0 := bOutBit[3,0]; // 200
	PLC_O_PROG1.1 := bOutBit[3,1]; // 201
	PLC_O_PROG1.2 := bOutBit[3,2]; // 202
	PLC_O_PROG1.3 := bOutBit[3,3]; // 203
	PLC_O_PROG1.4 := bOutBit[3,4]; // 204
	PLC_O_PROG1.5 := bOutBit[3,5]; // 205
	PLC_O_PROG1.6 := bOutBit[3,6]; // 206
	PLC_O_PROG1.7 := bOutBit[3,7]; // 207
	PLC_O_PROG1.8 := bOutBit[4,0]; // 208
	PLC_O_PROG1.9 := bOutBit[4,1]; // 209
	PLC_O_PROG1.10 := bOutBit[4,2]; // 210
	PLC_O_PROG1.11 := bOutBit[4,3]; // 211
	PLC_O_PROG1.12 := bOutBit[4,4]; // 212
	PLC_O_PROG1.13 := bOutBit[4,5]; // 213
	PLC_O_PROG1.14 := bOutBit[4,6]; // 214
	PLC_O_PROG1.15 := bOutBit[4,7]; // 215
	PLC_O_PROG1.16 := bOutBit[5,0]; // 216
	PLC_O_PROG1.17 := bOutBit[5,1]; // 217
	PLC_O_PROG1.18 := bOutBit[5,2]; // 218
	PLC_O_PROG1.19 := bOutBit[5,3]; // 219
	PLC_O_PROG1.20 := bOutBit[5,4]; // 220
	PLC_O_PROG1.21 := bOutBit[5,5]; // 221
	PLC_O_PROG1.22 := bOutBit[5,6]; // 222
	PLC_O_PROG1.23 := bOutBit[5,7]; // 223
	PLC_O_PROG1.24 := bOutBit[6,0]; // 224
	PLC_O_PROG1.25 := bOutBit[6,1]; // 225
	PLC_O_PROG1.26 := bOutBit[6,2]; // 226
	PLC_O_PROG1.27 := bOutBit[6,3]; // 227
	PLC_O_PROG1.28 := bOutBit[6,4]; // 228
	PLC_O_PROG1.29 := bOutBit[6,5]; // 229
	PLC_O_PROG1.30 := bOutBit[6,6]; // 230
	PLC_O_PROG1.31 := bOutBit[6,7]; // 231
	
	// ===================================================================== Robot Data
	FOR index1 := 1 TO 6 BY 1 DO
		FOR index := 0 TO 31 BY 1 DO
			dAxis[index1] := PLC_I_AXIS[index1];
			dCurr[index1] := PLC_I_CURR[index1];
			dTemp[index1] := PLC_I_TEMP[index1];
		END_FOR
	END_FOR
	
	
	
	
	
	
	
	
	
//	//================================ Function IO
	
//	PLC_O_D1.0 := bOutBit[1,0]; //1027 motion enable (on to start motor)
//	PLC_O_D1.1 := bOutBit[1,1]; //1028 Drives off (inverse) (on to start motor)
//	PLC_O_D1.2 := bOutBit[1,2]; //1029 Activate interface (on to start motor)
//	PLC_O_D1.3 := bOutBit[1,3]; //1030 Prog Start
//	PLC_O_D1.4 := bOutBit[1,4]; //1031 Acknowledge error msg
//	PLC_O_D1.5 := bOutBit[1,5]; //1032 Drives on
//	PLC_O_D1.6 := bOutBit[1,6]; //1033
//	PLC_O_D1.7 := bOutBit[1,7]; //1034
	
//	PLC_O_D2.0 := bOutBit[2,0]; //1035
//	PLC_O_D2.1 := bOutBit[2,1]; //1036
//	PLC_O_D2.2 := bOutBit[2,2]; //1037
//	PLC_O_D2.3 := bOutBit[2,3]; //1038
//	PLC_O_D2.4 := bOutBit[2,4]; //1039
//	PLC_O_D2.5 := bOutBit[2,5]; //1040
//	PLC_O_D2.6 := bOutBit[2,6]; //1041
//	PLC_O_D2.7 := bOutBit[2,7]; //1042
	
//	bInBit[1,0] := PLC_I_D1.0; //993
//	bInBit[1,1] := PLC_I_D1.1; //994
//	bInBit[1,2] := PLC_I_D1.2; //995
//	bInBit[1,3] := PLC_I_D1.3; //996
//	bInBit[1,4] := PLC_I_D1.4; //997
//	bInBit[1,5] := PLC_I_D1.5; //998
//	bInBit[1,6] := PLC_I_D1.6; //999
//	bInBit[1,7] := PLC_I_D1.7; //1000
	
//	bInBit[2,0] := PLC_I_D2.0; //1001
//	bInBit[2,1] := PLC_I_D2.1; //1002
//	bInBit[2,2] := PLC_I_D2.2; //1003
//	bInBit[2,3] := PLC_I_D2.3; //1004
//	bInBit[2,4] := PLC_I_D2.4; //1005
//	bInBit[2,5] := PLC_I_D2.5; //1006
//	bInBit[2,6] := PLC_I_D2.6; //1007
//	bInBit[2,7] := PLC_I_D2.7; //1008
	
//	//================================ Motion IO
	
//	IF NoMotion THEN
//		RETURN;
//	END_IF
	
//	PLC_O_D3.0 := bOutBit[3,0]; //200
//	PLC_O_D3.1 := bOutBit[3,1]; //201
//	PLC_O_D3.2 := bOutBit[3,2]; //202
//	PLC_O_D3.3 := bOutBit[3,3]; //203
//	PLC_O_D3.4 := bOutBit[3,4]; //204
//	PLC_O_D3.5 := bOutBit[3,5]; //205
//	PLC_O_D3.6 := bOutBit[3,6]; //206
//	PLC_O_D3.7 := bOutBit[3,7]; //207
	
//	PLC_O_D4.0 := bOutBit[4,0]; //208
//	PLC_O_D4.1 := bOutBit[4,1]; //209
//	PLC_O_D4.2 := bOutBit[4,2]; //210
//	PLC_O_D4.3 := bOutBit[4,3]; //211
//	PLC_O_D4.4 := bOutBit[4,4]; //212
//	PLC_O_D4.5 := bOutBit[4,5]; //213
//	PLC_O_D4.6 := bOutBit[4,6]; //214
//	PLC_O_D4.7 := bOutBit[4,7]; //215
	
//	PLC_O_D5.0 := bOutBit[5,0]; //216
//	PLC_O_D5.1 := bOutBit[5,1]; //217
//	PLC_O_D5.2 := bOutBit[5,2]; //218
//	PLC_O_D5.3 := bOutBit[5,3]; //219
//	PLC_O_D5.4 := bOutBit[5,4]; //220
//	PLC_O_D5.5 := bOutBit[5,5]; //221
//	PLC_O_D5.6 := bOutBit[5,6]; //222
//	PLC_O_D5.7 := bOutBit[5,7]; //223

//	PLC_O_D6.0 := bOutBit[6,0]; //224
//	PLC_O_D6.1 := bOutBit[6,1]; //225
//	PLC_O_D6.2 := bOutBit[6,2]; //226
//	PLC_O_D6.3 := bOutBit[6,3]; //227
//	PLC_O_D6.4 := bOutBit[6,4]; //228
//	PLC_O_D6.5 := bOutBit[6,5]; //229
//	PLC_O_D6.6 := bOutBit[6,6]; //230
//	PLC_O_D6.7 := bOutBit[6,7]; //231

//	bInBit[3,0] := PLC_I_D3.0; //200
//	bInBit[3,1] := PLC_I_D3.1; //201
//	bInBit[3,2] := PLC_I_D3.2; //202
//	bInBit[3,3] := PLC_I_D3.3; //203
//	bInBit[3,4] := PLC_I_D3.4; //204
//	bInBit[3,5] := PLC_I_D3.5; //205
//	bInBit[3,6] := PLC_I_D3.6; //206
//	bInBit[3,7] := PLC_I_D3.7; //207
	
//	bInBit[4,0] := PLC_I_D4.0; //208
//	bInBit[4,1] := PLC_I_D4.1; //209
//	bInBit[4,2] := PLC_I_D4.2; //210
//	bInBit[4,3] := PLC_I_D4.3; //211
//	bInBit[4,4] := PLC_I_D4.4; //212
//	bInBit[4,5] := PLC_I_D4.5; //213
//	bInBit[4,6] := PLC_I_D4.6; //214
//	bInBit[4,7] := PLC_I_D4.7; //215
	
//	bInBit[5,0] := PLC_I_D5.0; //216
//	bInBit[5,1] := PLC_I_D5.1; //217
//	bInBit[5,2] := PLC_I_D5.2; //218
//	bInBit[5,3] := PLC_I_D5.3; //219
//	bInBit[5,4] := PLC_I_D5.4; //220
//	bInBit[5,5] := PLC_I_D5.5; //221
//	bInBit[5,6] := PLC_I_D5.6; //222
//	bInBit[5,7] := PLC_I_D5.7; //223
	
//	bInBit[6,0] := PLC_I_D6.0; //224
//	bInBit[6,1] := PLC_I_D6.1; //225
//	bInBit[6,2] := PLC_I_D6.2; //226
//	bInBit[6,3] := PLC_I_D6.3; //227
//	bInBit[6,4] := PLC_I_D6.4; //228
//	bInBit[6,5] := PLC_I_D6.5; //229
//	bInBit[6,6] := PLC_I_D6.6; //230
//	bInBit[6,7] := PLC_I_D6.7; //231
	
	
	
//	//If Soft EStop is pressed, turn off 1027, 1028, 1029, 1030, 1031
//	IF KR5_Estop THEN		
//		bOutBit[3,0]:=bOutBit[3,1]:=bOutBit[3,2]:=bOutBit[3,3]:=bOutBit[3,4]:=bOutBit[2,5]:=bOutBit[2,6]:=FALSE;
//	END_IF
	
//	//================================ Function IO
	
//	PLC_O_D3.0 := bOutBit[3,0]; //1027
//	PLC_O_D3.1 := bOutBit[3,1]; //1028
//	PLC_O_D3.2 := bOutBit[3,2]; //1029
//	PLC_O_D3.3 := bOutBit[3,3]; //1030
//	PLC_O_D3.4 := bOutBit[3,4]; //1031
//	PLC_O_D3.5 := bOutBit[3,5]; //1032
//	PLC_O_D3.6 := bOutBit[3,6]; //1033
//	PLC_O_D3.7 := bOutBit[3,7]; //1034
	
//	PLC_O_D4.0 := bOutBit[4,0]; //1035
//	PLC_O_D4.1 := bOutBit[4,1]; //1036
//	PLC_O_D4.2 := bOutBit[4,2]; //1037
//	PLC_O_D4.3 := bOutBit[4,3]; //1038
//	PLC_O_D4.4 := bOutBit[4,4]; //1039
//	PLC_O_D4.5 := bOutBit[4,5]; //1040
//	PLC_O_D4.6 := bOutBit[4,6]; //1041
//	PLC_O_D4.7 := bOutBit[4,7]; //1042
	
//	bInBit[3,0] := PLC_I_D3.0; //993
//	bInBit[3,1] := PLC_I_D3.1; //994
//	bInBit[3,2] := PLC_I_D3.2; //995
//	bInBit[3,3] := PLC_I_D3.3; //996
//	bInBit[3,4] := PLC_I_D3.4; //997
//	bInBit[3,5] := PLC_I_D3.5; //998
//	bInBit[3,6] := PLC_I_D3.6; //999
//	bInBit[3,7] := PLC_I_D3.7; //1000
	
//	bInBit[4,0] := PLC_I_D4.0; //1001
//	bInBit[4,1] := PLC_I_D4.1; //1002
//	bInBit[4,2] := PLC_I_D4.2; //1003
//	bInBit[4,3] := PLC_I_D4.3; //1004
//	bInBit[4,4] := PLC_I_D4.4; //1005
//	bInBit[4,5] := PLC_I_D4.5; //1006
//	bInBit[4,6] := PLC_I_D4.6; //1007
//	bInBit[4,7] := PLC_I_D4.7; //1008
	
//	//================================ Motion IO
	
//	IF NoMotion THEN
//		RETURN;
//	END_IF

//	PLC_O_D1.0 := bOutBit[1,0]; //200
//	PLC_O_D1.1 := bOutBit[1,1]; //201
//	PLC_O_D1.2 := bOutBit[1,2]; //202
//	PLC_O_D1.3 := bOutBit[1,3]; //203
//	PLC_O_D1.4 := bOutBit[1,4]; //204
//	PLC_O_D1.5 := bOutBit[1,5]; //205
//	PLC_O_D1.6 := bOutBit[1,6]; //206
//	PLC_O_D1.7 := bOutBit[1,7]; //207
	
//	PLC_O_D2.0 := bOutBit[2,0]; //208
//	PLC_O_D2.1 := bOutBit[2,1]; //209
//	PLC_O_D2.2 := bOutBit[2,2]; //210
//	PLC_O_D2.3 := bOutBit[2,3]; //211
//	PLC_O_D2.4 := bOutBit[2,4]; //212
//	PLC_O_D2.5 := bOutBit[2,5]; //213
//	PLC_O_D2.6 := bOutBit[2,6]; //214
//	PLC_O_D2.7 := bOutBit[2,7]; //215
	
//	bInBit[1,0] := PLC_I_D1.0; //200
//	bInBit[1,1] := PLC_I_D1.1; //201
//	bInBit[1,2] := PLC_I_D1.2; //202
//	bInBit[1,3] := PLC_I_D1.3; //203
//	bInBit[1,4] := PLC_I_D1.4; //204
//	bInBit[1,5] := PLC_I_D1.5; //205
//	bInBit[1,6] := PLC_I_D1.6; //206
//	bInBit[1,7] := PLC_I_D1.7; //207
	
//	bInBit[2,0] := PLC_I_D2.0; //208
//	bInBit[2,1] := PLC_I_D2.1; //209
//	bInBit[2,2] := PLC_I_D2.2; //210
//	bInBit[2,3] := PLC_I_D2.3; //211
//	bInBit[2,4] := PLC_I_D2.4; //212
//	bInBit[2,5] := PLC_I_D2.5; //213
//	bInBit[2,6] := PLC_I_D2.6; //214
//	bInBit[2,7] := PLC_I_D2.7; //215

//	IF PLC_I_D1 = 1 THEN
//		Idle := TRUE;
//	ELSE
//		Idle := FALSE;
//	END_IF]]></ST>
    </Implementation>
    <LineIds Name="KR5">
      <LineId Id="265" Count="4" />
      <LineId Id="697" Count="2" />
      <LineId Id="701" Count="3" />
      <LineId Id="418" Count="5" />
      <LineId Id="450" Count="3" />
      <LineId Id="484" Count="1" />
      <LineId Id="454" Count="2" />
      <LineId Id="277" Count="0" />
      <LineId Id="522" Count="0" />
      <LineId Id="531" Count="34" />
      <LineId Id="578" Count="33" />
      <LineId Id="645" Count="9" />
      <LineId Id="523" Count="0" />
      <LineId Id="527" Count="3" />
      <LineId Id="524" Count="2" />
      <LineId Id="278" Count="113" />
      <LineId Id="174" Count="0" />
      <LineId Id="392" Count="2" />
      <LineId Id="175" Count="3" />
      <LineId Id="234" Count="1" />
      <LineId Id="180" Count="16" />
      <LineId Id="198" Count="0" />
      <LineId Id="215" Count="0" />
      <LineId Id="199" Count="15" />
      <LineId Id="18" Count="0" />
      <LineId Id="236" Count="1" />
      <LineId Id="197" Count="0" />
      <LineId Id="179" Count="0" />
      <LineId Id="152" Count="2" />
      <LineId Id="19" Count="6" />
      <LineId Id="117" Count="0" />
      <LineId Id="125" Count="0" />
      <LineId Id="118" Count="6" />
      <LineId Id="26" Count="0" />
      <LineId Id="45" Count="8" />
      <LineId Id="126" Count="7" />
      <LineId Id="54" Count="0" />
      <LineId Id="146" Count="2" />
      <LineId Id="150" Count="1" />
      <LineId Id="149" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>