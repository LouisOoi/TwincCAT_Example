<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="KR4" Id="{7da10f0a-d1d1-4ee7-9d5b-9117267d300f}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM KR4
VAR_INPUT
	PLC_O_SYS 	AT %Q* : DWORD;
	PLC_O_PROG1 AT %Q* : DWORD;
	
	PLC_I_SYS 	AT %I* : DWORD;
	PLC_I_PROG1 AT %I* : DWORD;
	PLC_I_AXIS 	AT %I* : ARRAY[1..6] OF DWORD;
	PLC_I_CURR	AT %I* : ARRAY[1..6] OF DWORD;
	PLC_I_TEMP	AT %I* : ARRAY[1..6] OF DWORD;
	
	KR4_Estop		: BOOL;
	Idle			: BOOL;
	NoMotion		: BOOL;
	
	bOutBit : ARRAY [1..3,0..7] OF BOOL;
	bInBit  : ARRAY [1..3,0..7] OF BOOL;
	
	index		: USINT;
	index1		: USINT;
	
	dAxis		: ARRAY[1..6] OF DWORD;
	dCurr		: ARRAY[1..6] OF DWORD;
	dTemp		: ARRAY[1..6] OF DWORD;
END_VAR

VAR

	KROnline: BOOL;
	KR_ProgReady: BOOL;
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[	//If Soft EStop is pressed, turn off 1027 ~ 1034
	IF KR4_Estop THEN		
		bOutBit[1,0]:=bOutBit[1,1]:=bOutBit[1,2]:=bOutBit[1,3]:=
		bOutBit[1,4]:=bOutBit[1,5]:=bOutBit[1,6]:=bOutBit[1,7]:=FALSE;
	END_IF

	//Idle 	
	IF 	PLC_I_PROG1 = 1 THEN 
			Idle := TRUE;
	ELSE
			Idle := FALSE;	
	END_IF
	
	//Online
	IF bInBit[1,0] OR bInBit[1,3] THEN
		KROnline := TRUE;
	ELSE
		KROnline := FALSE;
	END_IF

	//Program Ready
	IF bInBit[1,6] AND bInBit[2,4] THEN
		KR_ProgReady := TRUE;
	ELSIF GVL.KR4_bypass THEN
		KR_ProgReady := TRUE;
	ELSE
		KR_ProgReady := FALSE;
	END_IF
	
	// ======================================================================== System IO
	// Data In
	FOR index := 0 TO 31 BY 1 DO
		IF index < 8 THEN
			bInBit[1,index] := DWORD_TO_BOOL( SHR(PLC_I_SYS,index) AND 1);
		ELSIF index > 7 AND index < 16 THEN
			bInBit[2,index-8] := DWORD_TO_BOOL( SHR(PLC_I_SYS,index) AND 1);
		END_IF
	END_FOR
	
	// Data Out
	PLC_O_SYS.0 := bOutBit[1,0]; // 1027 move_enable
	PLC_O_SYS.1 := bOutBit[1,1]; // 1028 Drive_off
	PLC_O_SYS.2 := bOutBit[1,2]; // 1029 IO_Activate
	PLC_O_SYS.3 := bOutBit[1,3]; // 1030 Ext_Start
	PLC_O_SYS.4 := bOutBit[1,4]; // 1031 Conf_mess
	PLC_O_SYS.5 := bOutBit[1,5]; // 1032 Drive_on
	PLC_O_SYS.6 := bOutBit[1,6]; // 1033 Pgno_Fbit
	PLC_O_SYS.7 := bOutBit[1,7]; // 1034 Pgno_Valid
	PLC_O_SYS.8 := bOutBit[2,0]; // 1035 Pgno_Parity

	// ===================================================================== Programme IO
	FOR index := 0 TO 31 BY 1 DO
		IF index < 8 THEN
			bInBit[3,index] := DWORD_TO_BOOL( SHR(PLC_I_PROG1,index) AND 1);
		END_IF
	END_FOR
	
	PLC_O_PROG1.0 := bOutBit[3,0]; // 200
	PLC_O_PROG1.1 := bOutBit[3,1]; // 201
	PLC_O_PROG1.2 := bOutBit[3,2]; // 202
	PLC_O_PROG1.3 := bOutBit[3,3]; // 203
	PLC_O_PROG1.4 := bOutBit[3,4]; // 204
	PLC_O_PROG1.5 := bOutBit[3,5]; // 205
	PLC_O_PROG1.6 := bOutBit[3,6]; // 206
	PLC_O_PROG1.7 := bOutBit[3,7]; // 207
	
	// ===================================================================== Robot Data
	FOR index1 := 1 TO 6 BY 1 DO
		FOR index := 0 TO 31 BY 1 DO
			dAxis[index1] := PLC_I_AXIS[index1];
			dCurr[index1] := PLC_I_CURR[index1];
			dTemp[index1] := PLC_I_TEMP[index1];
		END_FOR
	END_FOR
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
//	//================================ Function IO
	
//	PLC_O_D1.0 := bOutBit[1,0]; //1027 motion enable (on to start motor)
//	PLC_O_D1.1 := bOutBit[1,1]; //1028 Drives off (inverse) (on to start motor)
//	PLC_O_D1.2 := bOutBit[1,2]; //1029 Activate interface (on to start motor)
//	PLC_O_D1.3 := bOutBit[1,3]; //1030 Prog Start
//	PLC_O_D1.4 := bOutBit[1,4]; //1031 Acknowledge error msg
//	PLC_O_D1.5 := bOutBit[1,5]; //1032 Drives on
//	PLC_O_D1.6 := bOutBit[1,6]; //1033
//	PLC_O_D1.7 := bOutBit[1,7]; //1034
	
//	PLC_O_D2.0 := bOutBit[2,0]; //1035
//	PLC_O_D2.1 := bOutBit[2,1]; //1036
//	PLC_O_D2.2 := bOutBit[2,2]; //1037
//	PLC_O_D2.3 := bOutBit[2,3]; //1038
//	PLC_O_D2.4 := bOutBit[2,4]; //1039
//	PLC_O_D2.5 := bOutBit[2,5]; //1040
//	PLC_O_D2.6 := bOutBit[2,6]; //1041
//	PLC_O_D2.7 := bOutBit[2,7]; //1042
	
//	bInBit[1,0] := PLC_I_D1.0; //993
//	bInBit[1,1] := PLC_I_D1.1; //994
//	bInBit[1,2] := PLC_I_D1.2; //995
//	bInBit[1,3] := PLC_I_D1.3; //996
//	bInBit[1,4] := PLC_I_D1.4; //997
//	bInBit[1,5] := PLC_I_D1.5; //998
//	bInBit[1,6] := PLC_I_D1.6; //999
//	bInBit[1,7] := PLC_I_D1.7; //1000
	
//	bInBit[2,0] := PLC_I_D2.0; //1001
//	bInBit[2,1] := PLC_I_D2.1; //1002
//	bInBit[2,2] := PLC_I_D2.2; //1003
//	bInBit[2,3] := PLC_I_D2.3; //1004
//	bInBit[2,4] := PLC_I_D2.4; //1005
//	bInBit[2,5] := PLC_I_D2.5; //1006
//	bInBit[2,6] := PLC_I_D2.6; //1007
//	bInBit[2,7] := PLC_I_D2.7; //1008
	
//	//================================ Motion IO
	
//	IF NoMotion THEN
//		RETURN;
//	END_IF
	
//	PLC_O_D3.0 := bOutBit[3,0]; //200
//	PLC_O_D3.1 := bOutBit[3,1]; //201
//	PLC_O_D3.2 := bOutBit[3,2]; //202
//	PLC_O_D3.3 := bOutBit[3,3]; //203
//	PLC_O_D3.4 := bOutBit[3,4]; //204
//	PLC_O_D3.5 := bOutBit[3,5]; //205
//	PLC_O_D3.6 := bOutBit[3,6]; //206
//	PLC_O_D3.7 := bOutBit[3,7]; //207

//	bInBit[3,0] := PLC_I_D3.0; //200
//	bInBit[3,1] := PLC_I_D3.1; //201
//	bInBit[3,2] := PLC_I_D3.2; //202
//	bInBit[3,3] := PLC_I_D3.3; //203
//	bInBit[3,4] := PLC_I_D3.4; //204
//	bInBit[3,5] := PLC_I_D3.5; //205
//	bInBit[3,6] := PLC_I_D3.6; //206
//	bInBit[3,7] := PLC_I_D3.7; //207

	
//	//If Soft EStop is pressed, turn off 1027, 1028, 1029, 1030, 1031
//	IF KR4_Estop THEN		
//		bOutBit[2,0]:=bOutBit[2,1]:=bOutBit[2,2]:=bOutBit[2,3]:=bOutBit[2,4]:=bOutBit[2,5]:=bOutBit[2,6]:=FALSE;
//	END_IF
	
//	//================================ Function IO
	
//	PLC_O_D2.0 := bOutBit[2,0]; //1027
//	PLC_O_D2.1 := bOutBit[2,1]; //1028
//	PLC_O_D2.2 := bOutBit[2,2]; //1029
//	PLC_O_D2.3 := bOutBit[2,3]; //1030
//	PLC_O_D2.4 := bOutBit[2,4]; //1031
//	PLC_O_D2.5 := bOutBit[2,5]; //1032
//	PLC_O_D2.6 := bOutBit[2,6]; //1033
//	PLC_O_D2.7 := bOutBit[2,7]; //1034
	
//	PLC_O_D3.0 := bOutBit[3,0]; //1035
//	PLC_O_D3.1 := bOutBit[3,1]; //1036
//	PLC_O_D3.2 := bOutBit[3,2]; //1037
//	PLC_O_D3.3 := bOutBit[3,3]; //1038
//	PLC_O_D3.4 := bOutBit[3,4]; //1039
//	PLC_O_D3.5 := bOutBit[3,5]; //1040
//	PLC_O_D3.6 := bOutBit[3,6]; //1041
//	PLC_O_D3.7 := bOutBit[3,7]; //1042
	
//	bInBit[2,0] := PLC_I_D2.0; //993
//	bInBit[2,1] := PLC_I_D2.1; //994
//	bInBit[2,2] := PLC_I_D2.2; //995
//	bInBit[2,3] := PLC_I_D2.3; //996
//	bInBit[2,4] := PLC_I_D2.4; //997
//	bInBit[2,5] := PLC_I_D2.5; //998
//	bInBit[2,6] := PLC_I_D2.6; //999
//	bInBit[2,7] := PLC_I_D2.7; //1000
	
//	bInBit[3,0] := PLC_I_D3.0; //1001
//	bInBit[3,1] := PLC_I_D3.1; //1002
//	bInBit[3,2] := PLC_I_D3.2; //1003
//	bInBit[3,3] := PLC_I_D3.3; //1004
//	bInBit[3,4] := PLC_I_D3.4; //1005
//	bInBit[3,5] := PLC_I_D3.5; //1006
//	bInBit[3,6] := PLC_I_D3.6; //1007
//	bInBit[3,7] := PLC_I_D3.7; //1008

//	//================================ Motion IO
	
//	IF NoMotion THEN
//		RETURN;
//	END_IF
	
//	PLC_O_D1.0 := bOutBit[1,0]; //300
//	PLC_O_D1.1 := bOutBit[1,1]; //301
//	PLC_O_D1.2 := bOutBit[1,2]; //302
//	PLC_O_D1.3 := bOutBit[1,3]; //303
//	PLC_O_D1.4 := bOutBit[1,4]; //304
//	PLC_O_D1.5 := bOutBit[1,5]; //305
//	PLC_O_D1.6 := bOutBit[1,6]; //306
//	PLC_O_D1.7 := bOutBit[1,7]; //307
	
//	bInBit[1,0] := PLC_I_D1.0; //300
//	bInBit[1,1] := PLC_I_D1.1; //301
//	bInBit[1,2] := PLC_I_D1.2; //302
//	bInBit[1,3] := PLC_I_D1.3; //303
//	bInBit[1,4] := PLC_I_D1.4; //304
//	bInBit[1,5] := PLC_I_D1.5; //305
//	bInBit[1,6] := PLC_I_D1.6; //306
//	bInBit[1,7] := PLC_I_D1.7; //307
	
//	IF PLC_I_D1 = 1 THEN
//		Idle := TRUE;
//	ELSE
//		Idle := FALSE;
//	END_IF]]></ST>
    </Implementation>
    <LineIds Name="KR4">
      <LineId Id="217" Count="5" />
      <LineId Id="570" Count="0" />
      <LineId Id="572" Count="0" />
      <LineId Id="574" Count="3" />
      <LineId Id="228" Count="0" />
      <LineId Id="366" Count="4" />
      <LineId Id="392" Count="3" />
      <LineId Id="421" Count="1" />
      <LineId Id="396" Count="2" />
      <LineId Id="229" Count="0" />
      <LineId Id="486" Count="45" />
      <LineId Id="467" Count="18" />
      <LineId Id="230" Count="51" />
      <LineId Id="309" Count="8" />
      <LineId Id="128" Count="0" />
      <LineId Id="344" Count="0" />
      <LineId Id="129" Count="2" />
      <LineId Id="72" Count="0" />
      <LineId Id="196" Count="1" />
      <LineId Id="133" Count="16" />
      <LineId Id="132" Count="0" />
      <LineId Id="151" Count="17" />
      <LineId Id="198" Count="1" />
      <LineId Id="170" Count="2" />
      <LineId Id="150" Count="0" />
      <LineId Id="173" Count="0" />
      <LineId Id="73" Count="6" />
      <LineId Id="26" Count="0" />
      <LineId Id="44" Count="0" />
      <LineId Id="81" Count="6" />
      <LineId Id="53" Count="0" />
      <LineId Id="174" Count="4" />
      <LineId Id="5" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>