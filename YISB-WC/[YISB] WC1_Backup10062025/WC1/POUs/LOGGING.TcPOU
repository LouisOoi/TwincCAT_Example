<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="LOGGING" Id="{16605c93-8696-4973-a434-6ac70e0b45c2}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM LOGGING
VAR_INPUT
	sWriteLog		: STRING[255];
	sLog			: STRING[255];
//	dir_log 		: UINT;
	bLogFlag		: BOOL;
	LogState		: INT;
END_VAR
VAR_OUTPUT
	bError				: BOOL;
	nErrID				: UDINT;
END_VAR
VAR
	CreateDir	: FB_CreateDir;
	FileOpen	: FB_FileOpen;
	FileWrite	: FB_FileWrite;
	FileClose	: FB_FileClose;
	
    ePath        	: E_OpenPath; (* folders root path *)
    sPathName     	: STRING;
	bBootFolder		: BOOL;
	writeBuffer		: STRING[255] := '';
	hfile			: UINT;
	
	sTxtName	: T_MaxString;
	sFolderName	: T_MaxString;
	DirCreateError	: BOOL;
	FileOpenError	: BOOL;
	FileWriteError	: BOOL;
	FileCloseError	: BOOL;
	sTimeStamp: STRING(255);
	
	writeFlag		: BOOL;
	lastLog			: String[255];
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[IF sLog = lastLog THEN
	RETURN;
END_IF

//CASE LogState OF
//	0:
//		writeFlag := TRUE;
//		// Set Log Folder Name
////		sFolderName := CONCAT ('C:\Users\celli\OneDrive\Desktop\YISB_LOG\',LOG_TIME_STAMP.Local_Date);
//		sFolderName := CONCAT ('C:\Users\Administrator\Desktop\log\',LOG_TIME_STAMP.Local_Date);
		
//		CreateDir(
//				sNetId:= '', 
//				sPathName:= sFolderName, 
//				ePath:= PATH_GENERIC, 
//				bExecute:= TRUE, 
//				tTimeout:= DEFAULT_ADS_TIMEOUT, 
//				bBusy=> , 
//				bError=> DirCreateError, 
//				nErrId=> nErrID);
//			IF CreateDir.tTimeout > DEFAULT_ADS_TIMEOUT THEN
//				LogState := 0;
//				bLogFlag := FALSE;
//				CreateDir.bExecute := FALSE;
//				FileOpen(bExecute := FALSE);
//				MAIN.BTN_LOG := FALSE;
//				RETURN;
//			ELSIF NOT CreateDir.bBusy THEN
//				LogState := 1;
//				CreateDir.bExecute := FALSE;
//				FileOpen(bExecute := FALSE);
//			END_IF

//		// Open File	
//		1:
//			// Set Log File Name	
//			sTxtName := WORD_TO_STRING(LOG_TIME_STAMP.LocalTime.systemTime.wHour);
//			sTxtName := CONCAT(sTxtName, '.txt');
//			sTxtName := CONCAT('\',sTxtName,);
//			sTxtName := CONCAT(sFolderName,sTxtName);
			
//			FileOpen(
//				sNetId:= , 
//				sPathName:= sTxtName, 
//				nMode:= FOPEN_MODEAPPEND, 
//				ePath:= PATH_GENERIC, 
//				bExecute:= TRUE, 
//				tTimeout:= DEFAULT_ADS_TIMEOUT, 
//				bBusy=> , 
//				bError=> FileOpenError, 
//				nErrId=> nErrID, 
//				hFile=> hfile);
//			IF FileOpenError OR FileOpen.tTimeout > DEFAULT_ADS_TIMEOUT THEN
//				LogState := 0;
//				bLogFlag := FALSE;
//				FileOpen.bExecute := FALSE;
//				FileWrite(bExecute := FALSE);
//				MAIN.BTN_LOG := FALSE;
//				RETURN;
//			ELSIF NOT FileOpen.bBusy THEN
//				LogState := 2;
//				FileOpen.bExecute := FALSE;
//				FileWrite(bExecute := FALSE);
//			END_IF
			
//		// Write File
//		2:	
//				// Set Log messages	
//				sTimeStamp 	:= CONCAT('$n',SYSTEMTIME_TO_STRING(LOG_TIME_STAMP.LocalTime.systemTime));
//				sTimeStamp 	:= CONCAT(sTimeStamp,' - ');
//				sWriteLog 	:= CONCAT(sTimeStamp, sLog);
//				writeBuffer := sWriteLog;
				
//				FileWrite(
//					sNetId:= , 
//					hFile:= hfile, 
//					pWriteBuff:= ADR(writeBuffer), 
//					cbWriteLen:= INT_TO_UDINT(LEN(writeBuffer)), 
//					bExecute:= TRUE, 
//					tTimeout:= T#3S, 
//					bBusy=> , 
//					bError=> FileWriteError, 
//					nErrId=> nErrID, 
//					cbWrite=> );
					
//			IF FileWriteError OR FileWrite.tTimeout > DEFAULT_ADS_TIMEOUT THEN
//				LogState := 0;
//				bLogFlag := FALSE;
//				FileWrite.bExecute := FALSE;
//				MAIN.BTN_LOG := FALSE;
//				writeFlag:= FALSE;
//				FileClose(bExecute := FALSE);
//				RETURN;
//			ELSIF NOT FileWrite.bBusy THEN
//				LogState := 3;
//				writeFlag:= FALSE;
//				FileWrite.bExecute := FALSE;
//				FileClose(bExecute := FALSE);
//			END_IF
			
//		// Close File
//		3:
//			FileClose(
//				sNetId:= , 
//				hFile:= hfile, 
//				bExecute:= TRUE,
//				tTimeout:= T#3S, 
//				bBusy=> , 
//				bError=> FileCloseError, 
//				nErrId=> nErrID);
//			IF FileCloseError OR FileClose.tTimeout > DEFAULT_ADS_TIMEOUT THEN
//				LogState := 0;
//				bLogFlag := FALSE;
//				lastLog := sLog;
//				FileClose(bExecute := FALSE);
//				MAIN.BTN_LOG := FALSE;
//				RETURN;
//			ELSIF NOT FileClose.bBusy THEN
//				LogState := 0;
//				lastLog := sLog;
//				FileClose(bExecute := FALSE);
//				CreateDir(bExecute:= FALSE);
//				bLogFlag := FALSE;
//				MAIN.BTN_LOG := FALSE;
//			END_IF
//END_CASE]]></ST>
    </Implementation>
    <LineIds Name="LOGGING">
      <LineId Id="367" Count="0" />
      <LineId Id="437" Count="0" />
      <LineId Id="372" Count="0" />
      <LineId Id="312" Count="0" />
      <LineId Id="5" Count="0" />
      <LineId Id="9" Count="0" />
      <LineId Id="258" Count="0" />
      <LineId Id="25" Count="0" />
      <LineId Id="29" Count="0" />
      <LineId Id="222" Count="0" />
      <LineId Id="50" Count="0" />
      <LineId Id="33" Count="12" />
      <LineId Id="316" Count="0" />
      <LineId Id="189" Count="0" />
      <LineId Id="46" Count="3" />
      <LineId Id="315" Count="0" />
      <LineId Id="60" Count="0" />
      <LineId Id="122" Count="0" />
      <LineId Id="121" Count="0" />
      <LineId Id="61" Count="0" />
      <LineId Id="64" Count="20" />
      <LineId Id="313" Count="0" />
      <LineId Id="188" Count="0" />
      <LineId Id="85" Count="3" />
      <LineId Id="314" Count="0" />
      <LineId Id="13" Count="0" />
      <LineId Id="119" Count="0" />
      <LineId Id="90" Count="1" />
      <LineId Id="94" Count="4" />
      <LineId Id="317" Count="11" />
      <LineId Id="259" Count="0" />
      <LineId Id="111" Count="3" />
      <LineId Id="187" Count="0" />
      <LineId Id="297" Count="0" />
      <LineId Id="330" Count="0" />
      <LineId Id="115" Count="2" />
      <LineId Id="298" Count="0" />
      <LineId Id="118" Count="0" />
      <LineId Id="329" Count="0" />
      <LineId Id="131" Count="3" />
      <LineId Id="136" Count="10" />
      <LineId Id="374" Count="0" />
      <LineId Id="331" Count="0" />
      <LineId Id="186" Count="0" />
      <LineId Id="148" Count="2" />
      <LineId Id="375" Count="0" />
      <LineId Id="332" Count="0" />
      <LineId Id="376" Count="0" />
      <LineId Id="152" Count="0" />
      <LineId Id="185" Count="0" />
      <LineId Id="89" Count="0" />
      <LineId Id="10" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>